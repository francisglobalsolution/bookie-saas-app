name: Manual QA/Prod Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy (qa/prod)"
        required: true
        type: choice
        options:
          - qa
          - prod

jobs:
  approve_and_delpoy_qa:
    name: Approve and Deploy QA
    if: github.event.inputs.environment == 'qa'
    runs-on: ubuntu-latest
    environment: qa
    needs: []
    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_app_terraform_io }}
      TERRAFORM_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_app_terraform_io }}
      TF_CLOUD_ORGANIZATION: "Francis_Global_Solution"
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1
    defaults:
      run:
        working-directory: ./.aws/workspaces/services/qa
    outputs:
      bucket: ${{ steps.export.outputs.bucket }}
      dist: ${{ steps.export.outputs.dist }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup QA Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5
      - name: Terraform Init (qa)
        run: terraform init -input=false
      - name: Terraform Validate QA
        run: terraform validate
      - name: Terraform Plan QA
        run: terraform plan
      # - name: Terraform Apply QA
      #   run: terraform apply -auto-approve
      - name: Export Terraform Outputs
        id: export
        run: |
          echo "bucket=$(terraform output -raw bucket_name)" >> "$GITHUB_OUTPUT"
          echo "dist=$(terraform output -raw distribution_id)" >> "$GITHUB_OUTPUT"
      - name: Install deps & build
        run: |
          npm ci
            npx expo export --platform web --output-dir web-build
      - name: Sync to S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --acl public-read --delete
        env:
          AWS_S3_BUCKET: ${{ steps.export.outputs.bucket }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}
          SOURCE_DIR: web-build
      - name: Invalidate CF
        run: |
          aws cloudfront create-invalidation --distribution-id "${{ steps.export.outputs.dist }}" --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  approve_and_deploy_prod:
    name: Approve and Deploy Prod
    if: github.event.inputs.environment == 'prod'
    runs-on: ubuntu-latest
    environment: prod
    needs: []
    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_app_terraform_io }}
      TERRAFORM_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_app_terraform_io }}
      TF_CLOUD_ORGANIZATION: "Francis_Global_Solution"
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1
    defaults:
      run:
        working-directory: ./.aws/workspaces/services/prod
    outputs:
      bucket: ${{ steps.export.outputs.bucket }}
      dist: ${{ steps.export.outputs.dist }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Prod Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5
      - name: Terraform Init (prod)
        run: terraform init -input=false
      - name: Terraform Validate Prod
        run: terraform validate
      - name: Terraform Plan Prod
        run: terraform plan
      # - name: Terraform Apply Prod
      #   run: terraform apply -auto-approve
      - name: Export Terraform Outputs
        id: export
        run: |
          echo "bucket=$(terraform output -raw bucket_name)" >> "$GITHUB_OUTPUT"
          echo "dist=$(terraform output -raw distribution_id)" >> "$GITHUB_OUTPUT"
      - name: Install deps & build
        run: |
          npm ci
            npx expo export --platform web --output-dir web-build
      - name: Sync to S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --acl public-read --delete
        env:
          AWS_S3_BUCKET: ${{ steps.export.outputs.bucket }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}
          SOURCE_DIR: web-build
      - name: Invalidate CF
        run: |
          aws cloudfront create-invalidation --distribution-id "${{ steps.export.outputs.dist }}" --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
