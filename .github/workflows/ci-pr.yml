name: PR Validation

on:
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        run: npm run lint

  test:
    name: Run Jest Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Run Jest
        run: npm run test

  terraform_pr_plan_dev:
    name: Terraform Initialize, Plan and Validate dev
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    environment: dev
    needs: test
    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_app_terraform_io }}
      TERRAFORM_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_app_terraform_io }}
      TF_CLOUD_ORGANIZATION: "Francis_Global_Solution"
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    defaults:
      run:
        working-directory: ./.aws/workspaces/services/dev
    steps:
      - uses: actions/checkout@v4
      - name: Setup Dev Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5
      - name: Terraform Init (dev)
        run: terraform init -input=false
      - name: Terraform Validate Dev
        run: terraform validate
      - name: Terraform Plan Dev
        run: terraform plan

  terraform_pr_plan_staging:
    name: Terraform Initialize, Plan and Validate staging
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    environment: staging
    needs: terraform_pr_plan_dev
    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_app_terraform_io }}
      TERRAFORM_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_app_terraform_io }}
      TF_CLOUD_ORGANIZATION: "Francis_Global_Solution"
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    defaults:
      run:
        working-directory: ./.aws/workspaces/services/staging
    steps:
      - uses: actions/checkout@v4
      - name: Setup Staging Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5
      - name: Terraform Init (staging)
        run: terraform init -input=false
      - name: Terraform Validate staging
        run: terraform validate
      - name: Terraform Plan staging
        run: terraform plan

  terraform_pr_plan_qa:
    name: Terraform Initialize, Plan and Validate qa
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    environment: qa
    needs: terraform_pr_plan_staging
    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_app_terraform_io }}
      TERRAFORM_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_app_terraform_io }}
      TF_CLOUD_ORGANIZATION: "Francis_Global_Solution"
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    defaults:
      run:
        working-directory: ./.aws/workspaces/services/qa
    steps:
      - uses: actions/checkout@v4
      - name: Setup QA Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5
      - name: Terraform Init (qa)
        run: terraform init -input=false
      - name: Terraform Validate qa
        run: terraform validate
      - name: Terraform Plan qa
        run: terraform plan

  terraform_pr_plan_prod:
    name: Terraform Initialize, Plan and Validate prod
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    environment: prod
    needs: terraform_pr_plan_qa
    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_app_terraform_io }}
      TERRAFORM_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_app_terraform_io }}
      TF_CLOUD_ORGANIZATION: "Francis_Global_Solution"
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    defaults:
      run:
        working-directory: ./.aws/workspaces/services/prod
    steps:
      - uses: actions/checkout@v4
      - name: Setup Prod Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5
      - name: Terraform Init (prod)
        run: terraform init -input=false
      - name: Terraform Validate prod
        run: terraform validate
      - name: Terraform Plan prod
        run: terraform plan

  prettier_check:
    name: Prettier Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
      - name: Run Prettier
        run: npx prettier --check .

  security_scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
      - name: Run npm audit
        run: npm audit --audit-level=high || true

  terraform_fmt:
    name: Terraform Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5
      - name: Check Terraform Format
        run: terraform fmt -check -recursive .aws/

  terraform_lint:
    name: Terraform Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
      - name: Run tflint
        run: tflint --chdir=.aws/

  type_check:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
      - name: Run TypeScript type check
        run: npx tsc --noEmit
