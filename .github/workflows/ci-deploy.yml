name: Deploy & Auto Deploy

on:
  push:
    branches: [main]

jobs:
  dev_deployment_on_merge:
    name: Deploy Dev on (Merge to Main)
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: dev
    needs: []
    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_app_terraform_io }}
      TERRAFORM_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_app_terraform_io }}
      TF_CLOUD_ORGANIZATION: "Francis_Global_Solution"
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    defaults:
      run:
        working-directory: ./.aws/workspaces/services/dev
    outputs:
      bucket: ${{ steps.export.outputs.bucket }}
      dist: ${{ steps.export.outputs.dist }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup dev Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5
      - name: Terraform Init (dev)
        run: terraform init -input=false
      - name: Terraform Validate Dev
        run: terraform validate
      - name: Terraform Plan Dev
        run: terraform plan
      - name: Terraform Apply Dev
        run: terraform apply -auto-approve
      - name: Export Terraform Outputs
        id: export
        shell: bash
        run: |
          set -euo pipefail
          bucket=$(terraform output -raw bucket_name)
          dist=$(terraform output -raw distribution_id)
          [[ -n "$bucket" ]] || { echo "bucket output is empty"; exit 1; }
          [[ -n "$dist"   ]] || { echo "distribution_id output is empty"; exit 1; }
          echo "bucket=$bucket" >> "$GITHUB_OUTPUT"
          echo "dist=$dist"     >> "$GITHUB_OUTPUT"

  deploy_web_dev:
    name: Upload Web Build + Invalidate CF (Dev)
    needs: dev_deployment_on_merge
    if: ${{ needs.dev_deployment_on_merge.result == 'success' }}
    runs-on: ubuntu-latest
    environment: dev
    env:
      AWS_REGION: us-east-1
      BUCKET_NAME: ${{ needs.dev_deployment_on_merge.outputs.bucket }}
      DIST_ID: ${{ needs.dev_deployment_on_merge.outputs.dist }}
    steps:
      - uses: actions/checkout@v4
      - name: Install deps & build
        run: |
          npm ci
          npx expo export --platform web --output-dir web-build
      - name: Debug outputs
        run: |
          echo "Bucket set? ${{ env.BUCKET_NAME != '' }}"
          echo "Dist set?   ${{ env.DIST_ID != '' }}"
      - name: Verify outputs & build dir
        run: |
          [[ -n "$BUCKET_NAME" ]] || { echo "BUCKET_NAME is empty"; exit 1; }
          [[ -n "$DIST_ID" ]] || { echo "DIST_ID is empty"; exit 1; }
          [[ -d "web-build" ]] || { echo "web-build directory missing"; exit 1; }
      - name: Sync to S3
        if: ${{ env.BUCKET_NAME != '' }}
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --acl public-read --delete
        env:
          AWS_S3_BUCKET: ${{ env.BUCKET_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}
          SOURCE_DIR: web-build
      - name: Invalidate CF
        if: ${{ env.DIST_ID != '' }}
        run: aws cloudfront create-invalidation --distribution-id "$DIST_ID" --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  staging_deployment_on_merge:
    name: DeploysStaging on (Merge to Main)
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: staging
    needs: []
    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_app_terraform_io }}
      TERRAFORM_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_app_terraform_io }}
      TF_CLOUD_ORGANIZATION: "Francis_Global_Solution"
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1
    defaults:
      run:
        working-directory: ./.aws/workspaces/services/staging
    outputs:
      bucket: ${{ steps.export.outputs.bucket }}
      dist: ${{ steps.export.outputs.dist }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup staging Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5
      - name: Terraform Init (staging)
        run: terraform init -input=false
      - name: Terraform Validate Staging
        run: terraform validate
      - name: Terraform Plan Staging
        run: terraform plan
      - name: Terraform Apply Staging
        run: terraform apply -auto-approve
      - name: Export Terraform Outputs
        id: export
        shell: bash
        run: |
          set -euo pipefail
          bucket=$(terraform output -raw bucket_name)
          dist=$(terraform output -raw distribution_id)
          [[ -n "$bucket" ]] || { echo "bucket output is empty"; exit 1; }
          [[ -n "$dist"   ]] || { echo "distribution_id output is empty"; exit 1; }
          echo "bucket=$bucket" >> "$GITHUB_OUTPUT"
          echo "dist=$dist"     >> "$GITHUB_OUTPUT"

  staging_web_deploy:
    name: Upload Web Build + Invalidate CF (Staging)
    needs: staging_deployment_on_merge
    if: ${{ needs.staging_deployment_on_merge.result == 'success' }}
    runs-on: ubuntu-latest
    environment: staging
    env:
      AWS_REGION: us-east-1
      BUCKET_NAME: ${{ needs.staging_deployment_on_merge.outputs.bucket }}
      DIST_ID: ${{ needs.staging_deployment_on_merge.outputs.dist }}
    steps:
      - uses: actions/checkout@v4
      - name: Install deps & build
        run: |
          npm ci
          npx expo export --platform web --output-dir web-build
      - name: Debug outputs
        run: |
          echo "Bucket set? ${{ env.BUCKET_NAME != '' }}"
          echo "Dist set?   ${{ env.DIST_ID != '' }}"
      - name: Verify outputs & build dir
        run: |
          [[ -n "$BUCKET_NAME" ]] || { echo "BUCKET_NAME is empty"; exit 1; }
          [[ -n "$DIST_ID" ]] || { echo "DIST_ID is empty"; exit 1; }
          [[ -d "web-build" ]] || { echo "web-build directory missing"; exit 1; }
      - name: Sync to S3
        if: ${{ env.BUCKET_NAME != '' }}
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --acl public-read --delete
        env:
          AWS_S3_BUCKET: ${{ env.BUCKET_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}
          SOURCE_DIR: web-build
      - name: Invalidate CF
        if: ${{ env.DIST_ID != '' }}
        run: aws cloudfront create-invalidation --distribution-id "$DIST_ID" --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
